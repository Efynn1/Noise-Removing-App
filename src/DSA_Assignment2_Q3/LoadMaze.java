package DSA_Assignment2_Q3;

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author flynn
 */
public class LoadMaze extends javax.swing.JFrame {

    /**
     * Creates new form MazeGUI
     */
    public LoadMaze() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        maze1 = new javax.swing.JButton();
        maze2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setSize(new java.awt.Dimension(200, 200));

        jButton1.setText("Open Maze File");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        maze1.setText("Maze 1");
        maze1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maze1ActionPerformed(evt);
            }
        });

        maze2.setText("Maze 2");
        maze2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maze2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(maze1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(maze2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(maze1)
                .addGap(18, 18, 18)
                .addComponent(maze2)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //opens file of user choice
        JFileChooser txtFileChooser = new JFileChooser(new File("."));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("", "txt");
        txtFileChooser.setFileFilter(filter);
        int stateTxtFileChooser = txtFileChooser.showOpenDialog(null);

        if (stateTxtFileChooser == JFileChooser.APPROVE_OPTION) {
            String fileName = txtFileChooser.getSelectedFile().getPath();
            
            //scans each line in text file for data
            try {
                File file = new File(fileName);
                Scanner scan = new Scanner(file);
                
                while(scan.hasNextLine()) {
                    String line = scan.nextLine();
                    System.out.println(line);
                    List<String> lineList = new ArrayList<String>();
                    lineList.add(line);
                    
                    //Split lines into correct variables (name positions and next links)
                    for(int i = 1; i < lineList.size(); i++) {
                        String[] tokens = lineList.get(i).split(",");
                        String name = tokens[0];
                        int posX = Integer.parseInt(tokens[1]);
                        int posY = Integer.parseInt(tokens[2]);
                        String link1 = tokens[3];
                        String link2 = tokens[4];
                    }
                    
                    
                }
            } catch(Exception e){
            }
            //display maze
            new ViewMaze().setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void maze1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maze1ActionPerformed
        // TODO add your handling code here:
        //loads maze1
        ViewMaze maze = new ViewMaze();
        maze.setVisible(true);
    }//GEN-LAST:event_maze1ActionPerformed

    private void maze2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maze2ActionPerformed
        // TODO add your handling code here:
        //loads maze2
        ViewMaze2 maze = new ViewMaze2();
        maze.setVisible(true);
    }//GEN-LAST:event_maze2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadMaze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadMaze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadMaze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadMaze.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadMaze().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton maze1;
    private javax.swing.JButton maze2;
    // End of variables declaration//GEN-END:variables
}
